'use strict';Object.defineProperty(exports,'__esModule',{value:!0}),exports.default=initClimate;function initClimate(a){if(a.userLocation)if(a.useIP){if(!a.ipAPIKey)throw new Error('useIP is true, but no ipinfo.io API key was provided!');getLatLong(a.ipAPIKey)}else navigator&&navigator.geolocation?navigator.geolocation.getCurrentPosition((b)=>{getWeather(b,a.weatherAPIKey,a.theme)}):(console.warn('Navigator not found, falling back to default location! Are you running this in a browser?'),a.userLocation=!1);a.userLocation||(!a.location&&(a.location='San Francisco'),getWeather(a.location,a.weatherAPIKey,a.theme))}async function getWeather(a,b,c){if(!b)throw new Error('You must set a valid `weatherAPIKey` in `initClimate()`!');let d=a.coords.latitude?await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${a.coords.latitude}&lon=${a.coords.longitude}&appid=${b}`):await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${encodeURIComponent(a)}&appid=${b}`);const e=await d.json();setTheme(c,e)}async function setTheme(a){const b=JSON.parse((await fetch(a)));console.log(b)}async function getLatLong(a){const b=await fetch(`https://ipinfo.io/json?token=${a}`).json();console.log(b)}module.exports=exports['default'];
